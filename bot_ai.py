#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import logging
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, CommandHandler, ContextTypes

from message_handler import handle_message
from prompt_updater import register_handlers
from moderator import register_moderator_handlers
from config import BOT_TOKEN, OWNER_ID, get_current_time


# üîπ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# üîá –û—Ç–∫–ª—é—á–∞–µ–º –ª–∏—à–Ω–∏–µ –ª–æ–≥–∏ –æ—Ç httpx –∏ telegram
logging.getLogger("httpx").setLevel(logging.WARNING)
logging.getLogger("telegram").setLevel(logging.WARNING)


def load_start_message():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –∏–∑ —Ñ–∞–π–ª–∞"""
    with open("data/start_message.txt", "r", encoding="utf-8") as f:
        return f.read()


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    chat = update.effective_chat

    # –¢–µ–∫—Å—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    text = load_start_message()
    await update.message.reply_text(text)

    # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
    admin_msg = (
        f"üêæ –ö—Ç–æ-—Ç–æ –Ω–∞–∂–∞–ª /start\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.first_name} (@{user.username or 'None'}, ID: {user.id})\n"
        f"üí¨ –ß–∞—Ç: {chat.title or '–õ–° —Å –±–æ—Ç–æ–º'} (ID: {chat.id})\n"
        f"‚è∞ –í—Ä–µ–º—è: {get_current_time()}"
    )
    try:
        await context.bot.send_message(chat_id=OWNER_ID, text=admin_msg)
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É: {e}", exc_info=True)


async def safe_handle(update, context):
    """–û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –≤ handle_message"""
    try:
        await handle_message(update, context)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_message: {e}", exc_info=True)


def main():
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º–∏ —Ç–∞–π–º–∞—É—Ç–∞–º–∏
    app = (
        Application.builder()
        .token(BOT_TOKEN)
        .read_timeout(60)    # –º–∞–∫—Å–∏–º—É–º –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç Telegram API
        .write_timeout(60)   # –º–∞–∫—Å–∏–º—É–º –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É
        .connect_timeout(30) # –º–∞–∫—Å–∏–º—É–º –Ω–∞ —É—Å—Ç–∞–Ω–æ–≤–∫—É —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        .pool_timeout(30)    # –æ–∂–∏–¥–∞–Ω–∏–µ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
        .build()
    )

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∞–ø–¥–µ–π—Ç–µ—Ä–∞ –ø—Ä–æ–º–ø—Ç–∞ (inline-–∫–Ω–æ–ø–∫–∏ –î–∞/–ù–µ—Ç)
    register_handlers(app)
    register_moderator_handlers(app)

    # üîπ –ö–æ–º–∞–Ω–¥–∞ /start
    app.add_handler(CommandHandler("start", start))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π (—Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ –∏ —Ç.–¥.)
    app.add_handler(MessageHandler(filters.ALL, safe_handle))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω, —Å–ª—É—à–∞–µ—Ç –≥—Ä—É–ø–ø—ã...")
    app.run_polling()


if __name__ == "__main__":
    main()
